plugins {
    id 'java'
}

group = 'io.github.asolntsev'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.12.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation "org.junit.platform:junit-platform-engine"
    testImplementation "org.junit.platform:junit-platform-launcher"

    testImplementation 'com.codeborne:selenide:7.7.3'
    testImplementation 'org.slf4j:slf4j-simple:2.0.17'
}

test {
    useJUnitPlatform()
    systemProperties["selenide.headless"] = project.properties["headless"] ?: "false"
}

tasks.register("downloadDependencies", Copy) { Copy copy ->
    copy.into project.layout.buildDirectory.dir("dependencies")
    copy.from {
        configurations
          .matching { Configuration c -> c.isCanBeResolved()}
          .collect { Configuration c -> c.resolve()}
          .flatten()
          .unique()
    }
}

tasks.register('test-alpine', Exec) {
    executable "./run-tests.sh"
    args "alpine"

    standardOutput = new ByteArrayOutputStream()
    ext.output = {
        return standardOutput.toString()
    }
}

tasks.register('test-debian', Exec) {
    executable "./run-tests.sh"
    args "debian"

    standardOutput = new ByteArrayOutputStream()
    ext.output = {
        return standardOutput.toString()
    }
}

tasks.register('selenium-chrome', Exec) {
    executable "./run-tests.sh"
    args "selenium-chrome"

    standardOutput = new ByteArrayOutputStream()
    ext.output = {
        return standardOutput.toString()
    }
}